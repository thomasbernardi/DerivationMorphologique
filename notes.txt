concevoir et réaliser un programme qui, a partir d'un mot,
va faire tout les dérivations possible en indiquant les règles
utilisées et les informations sémantiques

derivation:

mot -> list mot

regle:
regex -> POS -> ensemble de tranformations

1. traiter les cas particulier
2. traiter les regexps des plus précis (plus longs) aux plus généraux

mot de dapart -> mot cree, regle, mot existe?, a-t-il la semantique prevue (er -> ier (personne))
POS:

Abr:
Adj:
Adj:Card
Adj:Fem+InvPL
Adj:Fem+PL
Adj:Fem+SG
Adj:Fem+SG:InvGen+PL
Adj:Indef
Adj:InvGen+InvPL
Adj:InvGen+PL
Adj:InvGen+SG
Adj:InvGen+SG:InvGen+PL
Adj:Mas+InvPL
Adj:Mas+PL
Adj:Mas+SG
Adj:Ord
Adj:Pos
Adv:
Analogy:
Card:
Chunk:
Con:
Concept:
Conj:
Conj:Coord
Conj:Sub
Date:
Det:
Det:Fem+PL
Det:Fem+SG
Det:InvGen+PL
Det:InvGen+SG
Det:InvGen+SG:InvGen+PL
Det:Mas+PL
Det:Mas+SG
Expression:
Fem+SG+DemPro+Prox
Formule:
Gender:Fem
Gender:Inv
Gender:Mas
Info:
Int:
InvGen+PL+P1+PProRefl
Link:
Mas+SG+DemPro+Prox
Mas+SGDemPro2
Modifier:
Modifier:Nom
Modifier:Ver
NNom+Fem+SG+P3+PProRefl
NNom+InvGen+SG+P1+PProRefl
NNom+InvGen+SG+P3+PProRefl
NNom+Mas+SG+P3+PProRefl
Nom+InvGen+SG+P3+PC
Nom:
Nom:Fem+InvPL
Nom:Fem+PL
Nom:Fem+SG
Nom:Fem+SG+Nom
Nom:InvGen+InvPL
Nom:InvGen+PL
Nom:InvGen+SG
Nom:InvGen+SG:InvGen+PL
Nom:Mas+InvPL
Nom:Mas+PL
Nom:Mas+SG
Nom:Mas+SG+Nom
Nom:SG
Nom:SG+Card
Number:Inv
Number:Plur
Number:Sing
Ono:
POS:
Pre:
Prefix:
Pro:
Pro:3Fem+PL
Pro:3Fem+SG
Pro:3Mas+PL
Pro:3Mas+SG
Pro:Dem
Pro:Fem+PL
Pro:Fem+SG
Pro:Indef
Pro:Interro
Pro:InvGen+PL
Pro:InvGen+SG
Pro:Mas+PL
Pro:Mas+SG
Pro:PL+P1
Pro:PL+P2
Pro:PL+P3
Pro:Pers
Pro:Pers:COD
Pro:Pers:COI
Pro:Pers:SUJ
Pro:Pos
Pro:Rel
Pro:SG+P1
Pro:SG+P2
Pro:SG+P3
Pro:SG+P3:PL+P3
Pro:SG+P3PL+P3
Punct:
QPro:
Relation:
Suffix:
Symbole:
Tournure:
Tournure:Impersonnelle
Ukn:
Ver:
Ver:CPre+PL+P1
Ver:CPre+PL+P2
Ver:CPre+PL+P3
Ver:CPre+SG+P1:CPre+SG+P2
Ver:CPre+SG+P3
Ver:Conjug
Ver:IFut+PL+P1
Ver:IFut+PL+P2
Ver:IFut+PL+P3
Ver:IFut+SG+P1
Ver:IFut+SG+P2
Ver:IFut+SG+P3
Ver:IImp+PL+P1
Ver:IImp+PL+P1:SPre+PL+P1
Ver:IImp+PL+P1:SPre+PL+P1:SImp+PL+P1
Ver:IImp+PL+P2:SPre+PL+P2
Ver:IImp+PL+P2:SPre+PL+P2:SImp+PL+P2
Ver:IImp+PL+P3
Ver:IImp+SG+P1:IImp+SG+P2
Ver:IImp+SG+P3
Ver:IPSim+PL+P1
Ver:IPSim+PL+P2
Ver:IPSim+PL+P3
Ver:IPSim+SG+P1
Ver:IPSim+SG+P1:IPSim+SG+P2
Ver:IPSim+SG+P2
Ver:IPSim+SG+P3
Ver:IPre+PL+P1
Ver:IPre+PL+P1:ImPre+PL+P1
Ver:IPre+PL+P2
Ver:IPre+PL+P2:ImPre+PL+P2
Ver:IPre+PL+P3
Ver:IPre+PL+P3:SPre+PL+P3
Ver:IPre+PL+P3:SPre+PL+P3:SImp+PL+P3
Ver:IPre+SG+P1
Ver:IPre+SG+P1:IPre+SG+P2
Ver:IPre+SG+P1:IPre+SG+P2:IPSim+SG+P1:IPSim+SG+P2:ImPre+SG+P2
Ver:IPre+SG+P1:IPre+SG+P2:ImPre+SG+P2
Ver:IPre+SG+P1:IPre+SG+P3:SPre+SG+P1:SPre+SG+P3:ImPre+SG+P2
Ver:IPre+SG+P2
Ver:IPre+SG+P2:SPre+SG+P2
Ver:IPre+SG+P3
Ver:IPre+SG+P3:IPSim+SG+P3
Ver:IPre+SG+P3:ImPre+SG+P2
Ver:IPre+SG+P3:SPre+SG+P3
Ver:Imp+PL+P1
Ver:Imp+PL+P2
Ver:Imp+SG+P2
Ver:Inf
Ver:Inf+:IPre+SG+P1:IPre+SG+P3:SPre+SG+P1:SPre+SG+P3:ImPre+SG+P2
Ver:PPas
Ver:PPas+Fem+PL
Ver:PPas+Fem+PL:IPre+PL+P2:ImPre+PL+P2
Ver:PPas+Fem+SG
Ver:PPas+Fem+SG:SPre+SG+P1:SPre+SG+P3
Ver:PPas+Mas+PL
Ver:PPas+Mas+PL:IPSim+SG+P1:IPSim+SG+P2
Ver:PPas+Mas+PL:IPre+SG+P1:IPre+SG+P2:IPSim+SG+P1:IPSim+SG+P2:ImPre+SG+P2
Ver:PPas+Mas+SG
Ver:PPas+Mas+SG:IPSim+SG+P1:IPSim+SG+P2
Ver:PPas+Mas+SG:IPre+SG+P3
Ver:PPas+Mas+SG:PPas+Mas+PL
Ver:PPas+Mas+SG:PPas+Mas+PL:IPSim+SG+P1:IPSim+SG+P2
Ver:PPas+Mas+SG:PPas+Mas+PL:IPre+SG+P1:IPre+SG+P2:ImPre+SG+P2
Ver:PPre
Ver:PPre+Fem+SG
Ver:PPre+Mas+SG
Ver:SImp+PL+P1
Ver:SImp+PL+P2
Ver:SImp+PL+P3
Ver:SImp+SG+P1
Ver:SImp+SG+P2
Ver:SImp+SG+P3
Ver:SPre+PL+P3
Ver:SPre+SG+P1
Ver:SPre+SG+P1:ImPre+SG+P2
Ver:SPre+SG+P1:SPre+SG+P3
Ver:SPre+SG+P1:SPre+SG+P3:SImp+SG+P1
Ver:SPre+SG+P2
Ver:SPre+SG+P2:SImp+SG+P2
Ver:SPre+SG+P3
VerbalMode:Conditionnel
VerbalMode:Indicatif
VerbalMode:Subjonctif
VerbalTime:Future
VerbalTime:Past
VerbalTime:Present
